"use client";

import { useState, FormEvent } from "react";
import styles from "./openAbroad.module.css";
import Header from "../../../components/Header";

interface TaxInfo {
  vat: string;
  profit_tax: string;
  payroll_tax: string;
  other_taxes: string;
}

interface BusinessResponse {
  country: string;
  business_type: string;
  currency: string;
  registration_cost_local: string;
  registration_cost_rub: string;
  required_documents: string[];
  remote_registration: string;
  taxes: TaxInfo;
  tax_authority_url: string;
  licensing_required: string;
  registration_period_days: string;
  average_rent_office_per_sqm: string;
  average_rent_retail_per_sqm: string;
  average_rent_warehouse_per_sqm: string;
  commercial_loan_rate: string;
  deposit_rate: string;
  central_bank_rate: string;
  major_bank_name: string;
  major_bank_url: string;
  economic_freedom_index: string;
}

interface ValidationResponse {
  is_valid: boolean;
  corrected_business_type: string | null;
  message: string;
}

// Always use real API in production
const USE_MOCK_DATA = false;

// –°—Ç—Ä–∞–Ω—ã –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–≤–æ–±–æ–¥—ã
const COUNTRIES_WITHOUT_INDEX = [
  "–ê–Ω–¥–æ—Ä—Ä–∞", "–ê–Ω—Ç–∏–≥—É–∞ –∏ –ë–∞—Ä–±—É–¥–∞", "–ì—Ä–µ–Ω–∞–¥–∞", "–ì–æ–Ω–∫–æ–Ω–≥", "–ò—Ä–∞–∫", "–õ–∏–≤–∏—è",
  "–õ–∏—Ö—Ç–µ–Ω—à—Ç–µ–π–Ω", "–ú–∞–∫–∞–æ", "–ú–∞—Ä—à–∞–ª–ª–æ–≤—ã –û—Å—Ç—Ä–æ–≤–∞", "–ú–æ–Ω–∞–∫–æ", "–ù–∞—É—Ä—É", "–ü–∞–ª–∞—É",
  "–°–µ–Ω—Ç-–ö–∏—Ç—Å –∏ –ù–µ–≤–∏—Å", "–°–∞–Ω-–ú–∞—Ä–∏–Ω–æ", "–°–æ–º–∞–ª–∏", "–Æ–∂–Ω—ã–π –°—É–¥–∞–Ω", "–°–∏—Ä–∏—è",
  "–¢—É–≤–∞–ª—É", "–í–∞—Ç–∏–∫–∞–Ω", "–ô–µ–º–µ–Ω"
];

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞
const ALL_COUNTRIES = [
  "–ê–≤—Å—Ç—Ä–∞–ª–∏—è", "–ê–≤—Å—Ç—Ä–∏—è", "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω", "–ê–ª–±–∞–Ω–∏—è", "–ê–ª–∂–∏—Ä", "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞",
  "–ê—Ä–º–µ–Ω–∏—è", "–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω", "–ë–∞–≥–∞–º—ã", "–ë–∞–Ω–≥–ª–∞–¥–µ—à", "–ë–∞—Ä–±–∞–¥–æ—Å", "–ë–∞—Ö—Ä–µ–π–Ω",
  "–ë–µ–ª–∞—Ä—É—Å—å", "–ë–µ–ª–∏–∑", "–ë–µ–ª—å–≥–∏—è", "–ë–µ–Ω–∏–Ω", "–ë–æ–ª–≥–∞—Ä–∏—è", "–ë–æ–ª–∏–≤–∏—è",
  "–ë–æ—Å–Ω–∏—è –∏ –ì–µ—Ä—Ü–µ–≥–æ–≤–∏–Ω–∞", "–ë–æ—Ç—Å–≤–∞–Ω–∞", "–ë—Ä–∞–∑–∏–ª–∏—è", "–ë—Ä—É–Ω–µ–π", "–ë—É—Ä–∫–∏–Ω–∞-–§–∞—Å–æ",
  "–ë—É—Äundi", "–ë—É—Ç–∞–Ω", "–í–∞–Ω—É–∞—Ç—É", "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è", "–í–µ–Ω–≥—Ä–∏—è", "–í–µ–Ω–µ—Å—É—ç–ª–∞",
  "–í—å–µ—Ç–Ω–∞–º", "–ì–∞–±–æ–Ω", "–ì–∞–∏—Ç–∏", "–ì–∞–π–∞–Ω–∞", "–ì–∞–º–±–∏—è", "–ì–∞–Ω–∞", "–ì–≤–∞—Ç–µ–º–∞–ª–∞",
  "–ì–≤–∏–Ω–µ—è", "–ì–≤–∏–Ω–µ—è-–ë–∏—Å–∞—É", "–ì–µ—Ä–º–∞–Ω–∏—è", "–ì–æ–Ω–¥—É—Ä–∞—Å", "–ì—Ä–µ—Ü–∏—è", "–ì—Ä—É–∑–∏—è",
  "–î–∞–Ω–∏—è", "–î–∂–∏–±—É—Ç–∏", "–î–æ–º–∏–Ω–∏–∫–∞", "–î–æ–º–∏–Ω–∏–∫–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞", "–ï–≥–∏–ø–µ—Ç",
  "–ó–∞–º–±–∏—è", "–ó–∏–º–±–∞–±–≤–µ", "–ò–∑—Ä–∞–∏–ª—å", "–ò–Ω–¥–∏—è", "–ò–Ω–¥–æ–Ω–µ–∑–∏—è", "–ò–æ—Ä–¥–∞–Ω–∏—è", "–ò—Ä–∞–Ω",
  "–ò—Ä–ª–∞–Ω–¥–∏—è", "–ò—Å–ª–∞–Ω–¥–∏—è", "–ò—Å–ø–∞–Ω–∏—è", "–ò—Ç–∞–ª–∏—è", "–ö–∞–±–æ-–í–µ—Ä–¥–µ", "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω",
  "–ö–∞–º–±–æ–¥–∂–∞", "–ö–∞–º–µ—Ä—É–Ω", "–ö–∞–Ω–∞–¥–∞", "–ö–∞—Ç–∞—Ä", "–ö–µ–Ω–∏—è", "–ö–∏–ø—Ä", "–ö–∏—Ä–≥–∏–∑–∏—è",
  "–ö–∏—Ä–∏–±–∞—Ç–∏", "–ö–∏—Ç–∞–π", "–ö–æ–ª—É–º–±–∏—è", "–ö–æ–º–æ—Ä—ã", "–ö–æ–Ω–≥–æ", "–ö–æ—Ä–µ—è –°–µ–≤–µ—Ä–Ω–∞—è",
  "–ö–æ—Ä–µ—è –Æ–∂–Ω–∞—è", "–ö–æ—Å—Ç–∞-–†–∏–∫–∞", "–ö–æ—Ç-–¥'–ò–≤—É–∞—Ä", "–ö—É–±–∞", "–ö—É–≤–µ–π—Ç", "–õ–∞–æ—Å",
  "–õ–∞—Ç–≤–∏—è", "–õ–µ—Å–æ—Ç–æ", "–õ–∏–±–µ—Ä–∏—è", "–õ–∏–≤–∞–Ω", "–õ–∏—Ç–≤–∞", "–õ—é–∫—Å–µ–º–±—É—Ä–≥",
  "–ú–∞–≤—Ä–∏–∫–∏–π", "–ú–∞–≤—Ä–∏—Ç–∞–Ω–∏—è", "–ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä", "–ú–∞–ª–∞–≤–∏", "–ú–∞–ª–∞–π–∑–∏—è", "–ú–∞–ª–∏",
  "–ú–∞–ª—å–¥–∏–≤—ã", "–ú–∞–ª—å—Ç–∞", "–ú–∞—Ä–æ–∫–∫–æ", "–ú–µ–∫—Å–∏–∫–∞", "–ú–æ–∑–∞–º–±–∏–∫", "–ú–æ–ª–¥–æ–≤–∞",
  "–ú–æ–Ω–≥–æ–ª–∏—è", "–ú—å—è–Ω–º–∞", "–ù–∞–º–∏–±–∏—è", "–ù–µ–ø–∞–ª", "–ù–∏–≥–µ—Ä", "–ù–∏–≥–µ—Ä–∏—è",
  "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã", "–ù–∏–∫–∞—Ä–∞–≥—É–∞", "–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è", "–ù–æ—Ä–≤–µ–≥–∏—è", "–û–ê–≠", "–û–º–∞–Ω",
  "–ü–∞–∫–∏—Å—Ç–∞–Ω", "–ü–∞–Ω–∞–º–∞", "–ü–∞–ø—É–∞ ‚Äî –ù–æ–≤–∞—è –ì–≤–∏–Ω–µ—è", "–ü–∞—Ä–∞–≥–≤–∞–π", "–ü–µ—Ä—É",
  "–ü–æ–ª—å—à–∞", "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è", "–†–æ—Å—Å–∏—è", "–†—É–∞–Ω–¥–∞", "–†—É–º—ã–Ω–∏—è", "–°–∞–ª—å–≤–∞–¥–æ—Ä",
  "–°–∞–º–æ–∞", "–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è", "–°–µ–≤–µ—Ä–Ω–∞—è –ú–∞–∫–µ–¥–æ–Ω–∏—è", "–°–µ–π—à–µ–ª—ã", "–°–µ–Ω–µ–≥–∞–ª",
  "–°–µ—Ä–±–∏—è", "–°–∏–Ω–≥–∞–ø—É—Ä", "–°–ª–æ–≤–∞–∫–∏—è", "–°–ª–æ–≤–µ–Ω–∏—è", "–°–æ–ª–æ–º–æ–Ω–æ–≤—ã –û—Å—Ç—Ä–æ–≤–∞",
  "–°—É–¥–∞–Ω", "–°—É—Ä–∏–Ω–∞–º", "–°–®–ê", "–°—å–µ—Ä—Ä–∞-–õ–µ–æ–Ω–µ", "–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω", "–¢–∞–∏–ª–∞–Ω–¥",
  "–¢–∞–Ω–∑–∞–Ω–∏—è", "–¢–æ–≥–æ", "–¢–æ–Ω–≥–∞", "–¢—Ä–∏–Ω–∏–¥–∞–¥ –∏ –¢–æ–±–∞–≥–æ", "–¢—É–Ω–∏—Å", "–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω",
  "–¢—É—Ä—Ü–∏—è", "–£–≥–∞–Ω–¥–∞", "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "–£–∫—Ä–∞–∏–Ω–∞", "–£—Ä—É–≥–≤–∞–π", "–§–∏–¥–∂–∏",
  "–§–∏–ª–∏–ø–ø–∏–Ω—ã", "–§–∏–Ω–ª—è–Ω–¥–∏—è", "–§—Ä–∞–Ω—Ü–∏—è", "–•–æ—Ä–≤–∞—Ç–∏—è", "–¶–ê–†", "–ß–∞–¥", "–ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è",
  "–ß–µ—Ö–∏—è", "–ß–∏–ª–∏", "–®–≤–µ–π—Ü–∞—Ä–∏—è", "–®–≤–µ—Ü–∏—è", "–®—Ä–∏-–õ–∞–Ω–∫–∞", "–≠–∫–≤–∞–¥–æ—Ä",
  "–≠–∫–≤–∞—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –ì–≤–∏–Ω–µ—è", "–≠—Ä–∏—Ç—Ä–µ—è", "–≠—Å–≤–∞—Ç–∏–Ω–∏", "–≠—Å—Ç–æ–Ω–∏—è", "–≠—Ñ–∏–æ–ø–∏—è",
  "–Æ–ê–†", "–Ø–º–∞–π–∫–∞", "–Ø–ø–æ–Ω–∏—è"
];

// üé¨ Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const getMockData = (
  country: string,
  businessType: string
): BusinessResponse => {
  return {
    country: country,
    business_type: businessType,
    currency: "EUR",
    registration_cost_local: "500-1500",
    registration_cost_rub: "50000-150000",
    required_documents: [
      "–ü–∞—Å–ø–æ—Ä—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞",
      "–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞",
      "–°–ø—Ä–∞–≤–∫–∞ –æ –Ω–µ—Å—É–¥–∏–º–æ—Å—Ç–∏",
      "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
      "–£—Å—Ç–∞–≤ –∫–æ–º–ø–∞–Ω–∏–∏",
      "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)",
    ],
    remote_registration:
      "–ß–∞—Å—Ç–∏—á–Ω–æ: –ø–µ—Ä–≤–∏—á–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –æ–Ω–ª–∞–π–Ω, –Ω–æ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏—á–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ",
    taxes: {
      vat: "21%",
      profit_tax: "19%",
      payroll_tax: "33.8%",
      other_taxes: "–ú–µ—Å—Ç–Ω—ã–µ –Ω–∞–ª–æ–≥–∏ 2-3%, —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä",
    },
    tax_authority_url: "https://www.financnisprava.cz",
    licensing_required:
      "–¢—Ä–µ–±—É–µ—Ç—Å—è: —Å–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–º–µ—â–µ–Ω–∏—è –Ω–æ—Ä–º–∞–º –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–Ω–∏–∂–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
    registration_period_days: "5-10",
    average_rent_office_per_sqm: "15-25",
    average_rent_retail_per_sqm: "30-50",
    average_rent_warehouse_per_sqm: "8-15",
    commercial_loan_rate: "5-8%",
    deposit_rate: "2-3%",
    central_bank_rate: "4.5%",
    major_bank_name: "Deutsche Bank",
    major_bank_url: "https://www.deutschebank.de",
    economic_freedom_index: "74.8",
  };
};

export default function OpenAbroadPage() {
  const [country, setCountry] = useState("");
  const [businessType, setBusinessType] = useState("");
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<BusinessResponse | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [showLocalCurrency, setShowLocalCurrency] = useState(true);

  // API URL from environment variables
  // Development: uses http://localhost:8001 (local backend without prefix)
  // Production: uses Heroku URL with /openabroad prefix
  const API_URL = process.env.NEXT_PUBLIC_OPENABROAD_API_URL || "http://localhost:8001";
  const API_PREFIX = process.env.NEXT_PUBLIC_OPENABROAD_API_URL ? "/openabroad" : "";

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();

    if (!country.trim() || !businessType.trim()) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    setLoading(true);
    setError(null);
    setResult(null);

    // AI-–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ –±–∏–∑–Ω–µ—Å–∞ —á–µ—Ä–µ–∑ OpenAI
    try {
      const validationResponse = await fetch(`${API_URL}${API_PREFIX}/api/validate-business-type`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          business_type: businessType.trim(),
        }),
      });

      if (validationResponse.ok) {
        const validationData: ValidationResponse = await validationResponse.json();

        if (!validationData.is_valid) {
          setError(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–∏–¥ –±–∏–∑–Ω–µ—Å–∞. ${validationData.message}`);
          setLoading(false);
          return;
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (validationData.corrected_business_type) {
          setBusinessType(validationData.corrected_business_type);
        }
      }
      // –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ—ë
    } catch (validationError) {
      console.warn("–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ—ë");
    }

    // üé≠ MOCK MODE - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    if (USE_MOCK_DATA) {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
      await new Promise((resolve) => setTimeout(resolve, 1500));

      const mockData = getMockData(country.trim(), businessType.trim());
      setResult(mockData);
      setLoading(false);
      return;
    }

    // üîå REAL API MODE - —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
    try {
      const response = await fetch(`${API_URL}${API_PREFIX}/api/business-info`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          country: country.trim(),
          business_type: businessType.trim(),
        }),
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({
          detail: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        }));
        throw new Error(
          errorData.detail || `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–∫–æ–¥ ${response.status})`
        );
      }

      const data: BusinessResponse = await response.json();
      setResult(data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err);

      let errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö";

      if (err instanceof TypeError && err.message.includes("fetch")) {
        errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.";
      } else if (err instanceof Error) {
        errorMessage = err.message;
      }

      setError(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  const handleReset = () => {
    setCountry("");
    setBusinessType("");
    setResult(null);
    setError(null);
  };

  return (
    <main className={styles.container}>
      <Header />

      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.heroContent}>
          <h1 className="text-brand">–û—Ç–∫—Ä—ã—Ç—å –±–∏–∑–Ω–µ—Å –∑–∞ —Ä—É–±–µ–∂–æ–º</h1>
          <p className={styles.heroDescription}>
            –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –≤ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω–µ –º–∏—Ä–∞
          </p>
        </div>
      </section>

      {/* Form Section */}
      <section className={styles.formSection}>
        <div className={styles.card}>
          <form onSubmit={handleSubmit} className={styles.form}>
            <div className={styles.formGrid}>
              <div className={styles.formGroup}>
                <label htmlFor="country" className={styles.label}>
                  –°—Ç—Ä–∞–Ω–∞
                </label>
                <select
                  id="country"
                  value={country}
                  onChange={(e) => setCountry(e.target.value)}
                  className={styles.input}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</option>
                  {ALL_COUNTRIES.map((countryName) => (
                    <option key={countryName} value={countryName}>
                      {countryName}
                    </option>
                  ))}
                </select>
                <small className={styles.helpText}>
                  –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞
                </small>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="businessType" className={styles.label}>
                  –í–∏–¥ –±–∏–∑–Ω–µ—Å–∞
                </label>
                <input
                  type="text"
                  id="businessType"
                  value={businessType}
                  onChange={(e) => setBusinessType(e.target.value)}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–µ–∫–∞—Ä–Ω—è, IT-–∫–æ–º–ø–∞–Ω–∏—è"
                  className={styles.input}
                  required
                />
                <small className={styles.helpText}>
                  –£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ç–∏–ø –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
                </small>
              </div>
            </div>

            <button
              type="submit"
              disabled={loading}
              className={styles.submitButton}
            >
              {loading ? (
                <>
                  <span className={styles.spinner}></span>
                  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ...
                </>
              ) : (
                <>‚úàÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</>
              )}
            </button>
          </form>
        </div>
      </section>

      {/* Error Message */}
      {error && (
        <section className={styles.errorSection}>
          <div className={styles.errorAlert}>
            <div className={styles.errorIcon}>
              <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <circle cx="12" cy="12" r="10" />
                <line x1="12" y1="8" x2="12" y2="12" />
                <line x1="12" y1="16" x2="12.01" y2="16" />
              </svg>
            </div>
            <div className={styles.errorContent}>
              <h3 className={styles.errorTitle}>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</h3>
              <p className={styles.errorMessage}>{error}</p>
              <button
                onClick={() => {
                  setError(null);
                  handleSubmit(new Event('submit') as any);
                }}
                className={styles.retryButton}
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          </div>
        </section>
      )}

      {/* Results Section */}
      {result && (
        <section className={styles.resultsSection}>
          <div className={styles.resultsCard}>
            <div className={styles.resultsHeader}>
              <h2>
                –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∏–∑–Ω–µ—Å–∞ &quot;{result.business_type}&quot; –≤ —Å—Ç—Ä–∞–Ω–µ
                &quot;{result.country}&quot;
              </h2>
            </div>

            <div className={styles.resultsBody}>
              {/* Main Info Section */}
              <div className={styles.section}>
                <h3>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                <div className={styles.infoList}>
                  <div className={styles.infoItem}>
                    <span className={styles.infoLabel}>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                    <div className={styles.infoValueContainer}>
                      <div className={styles.currencyToggle}>
                        <button
                          onClick={() => setShowLocalCurrency(true)}
                          className={showLocalCurrency ? styles.active : ""}
                        >
                          {result.currency}
                        </button>
                        <button
                          onClick={() => setShowLocalCurrency(false)}
                          className={!showLocalCurrency ? styles.active : ""}
                        >
                          RUB
                        </button>
                      </div>
                      <span className={styles.infoValue}>
                        {showLocalCurrency
                          ? `${result.registration_cost_local} ${result.currency}`
                          : `${result.registration_cost_rub} ‚ÇΩ`}
                      </span>
                    </div>
                  </div>

                  <div className={styles.infoItem}>
                    <span className={styles.infoLabel}>–°—Ä–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                    <span className={styles.infoValue}>
                      {result.registration_period_days} —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
                    </span>
                  </div>

                  <div className={styles.infoItem}>
                    <span className={styles.infoLabel}>–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</span>
                    <span>{result.remote_registration}</span>
                  </div>
                </div>
              </div>

              {/* Documents and Licensing */}
              <div className={styles.section}>
                <h3>–¢—Ä–µ–±—É–µ–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
                <ul className={styles.documentsList}>
                  {result.required_documents.map((doc, index) => (
                    <li key={index} className={styles.documentItem}>
                      {doc}
                    </li>
                  ))}
                  <li className={styles.documentItem}>
                    <strong>–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ:</strong> {result.licensing_required}
                  </li>
                </ul>
              </div>

              {/* Taxes */}
              <div className={styles.section}>
                <h3>–ù–∞–ª–æ–≥–∏ (%)</h3>
                <div className={styles.taxesGrid}>
                  <div className={styles.taxItem}>
                    <small>–ù–î–°</small>
                    <strong>{result.taxes.vat.replace('%', '')}</strong>
                  </div>
                  <div className={styles.taxItem}>
                    <small>–ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å</small>
                    <strong>{result.taxes.profit_tax.replace('%', '')}</strong>
                  </div>
                  <div className={styles.taxItem}>
                    <small>–ù–∞–ª–æ–≥ –Ω–∞ –§–û–¢</small>
                    <strong>{result.taxes.payroll_tax.replace('%', '')}</strong>
                  </div>
                  <div className={styles.taxItem}>
                    <small>–ü—Ä–æ—á–∏–µ –Ω–∞–ª–æ–≥–∏</small>
                    <strong>{result.taxes.other_taxes}</strong>
                  </div>
                </div>
                {result.tax_authority_url && (
                  <p className={styles.taxLinkBottom}>
                    <a
                      href={result.tax_authority_url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className={styles.taxLink}
                    >
                      –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å–ª—É–∂–±—ã —Å—Ç—Ä–∞–Ω—ã ‚Üí
                    </a>
                  </p>
                )}
              </div>

              {/* Rent */}
              <div className={styles.section}>
                <h3>–°—Ä–µ–¥–Ω—è—è –∞—Ä–µ–Ω–¥–∞ (–∑–∞ 1 –º¬≤ –≤ –º–µ—Å—è—Ü, {result.currency})</h3>
                <div className={styles.rentGrid}>
                  <div className={styles.rentItem}>
                    <h4>–û—Ñ–∏—Å</h4>
                    <p className={styles.rentValue}>
                      {result.average_rent_office_per_sqm}
                    </p>
                  </div>
                  <div className={styles.rentItem}>
                    <h4>–¢–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥—å</h4>
                    <p className={styles.rentValue}>
                      {result.average_rent_retail_per_sqm}
                    </p>
                  </div>
                  <div className={styles.rentItem}>
                    <h4>–°–∫–ª–∞–¥</h4>
                    <p className={styles.rentValue}>
                      {result.average_rent_warehouse_per_sqm}
                    </p>
                  </div>
                </div>
              </div>

              {/* Financial Information */}
              <div className={styles.section}>
                <h3>–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (% –≥–æ–¥–æ–≤—ã—Ö)</h3>
                <div className={styles.financialGrid}>
                  <div className={styles.financialItem}>
                    <small>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –∫—Ä–µ–¥–∏—Ç—ã</small>
                    <strong>{result.commercial_loan_rate.replace('%', '').trim()}</strong>
                    {result.major_bank_url && (
                      <a
                        href={result.major_bank_url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className={styles.financialLink}
                      >
                        {result.major_bank_name} ‚Üí
                      </a>
                    )}
                  </div>
                  <div className={styles.financialItem}>
                    <small>–°—Ç–∞–≤–∫–∞ –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º</small>
                    <strong>{result.deposit_rate ? result.deposit_rate.replace('%', '').trim() : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</strong>
                  </div>
                  <div className={styles.financialItem}>
                    <small>–£—á–µ—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ü–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞</small>
                    <strong>{result.central_bank_rate ? result.central_bank_rate.replace('%', '').trim() : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</strong>
                  </div>
                </div>
              </div>

              {/* Economic Freedom Index */}
              <div className={styles.section}>
                <h3>
                  –ò–Ω–¥–µ–∫—Å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–≤–æ–±–æ–¥—ã{" "}
                  <a
                    href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B4%D0%B5%D0%BA%D1%81_%D1%8D%D0%BA%D0%BE%D0%BD%D0%BE%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B9_%D1%81%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D1%8B"
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.infoLink}
                  >
                    ?
                  </a>
                </h3>
                <p className={styles.infoValue}>
                  {COUNTRIES_WITHOUT_INDEX.includes(result.country)
                    ? "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
                    : `${result.economic_freedom_index} –∏–∑ 100`}
                </p>
                <small className={styles.indexNote}>
                  –†–µ–π—Ç–∏–Ω–≥ Heritage Foundation (–¥–∏–∞–ø–∞–∑–æ–Ω 0-100)
                </small>
              </div>
            </div>

            {/* Reset Button */}
            <div className={styles.resetSection}>
              <button onClick={handleReset} className={styles.resetButton}>
                –ù–æ–≤—ã–π –ø–æ–∏—Å–∫
              </button>
            </div>
          </div>
        </section>
      )}

      {/* Disclaimer */}
      {result && (
        <section className={styles.disclaimer}>
          <p>
            <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏ –º–æ–≥—É—Ç –Ω–µ –æ—Ç—Ä–∞–∂–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ.
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —é—Ä–∏—Å—Ç–∞–º–∏ –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞–º–∏ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏–π.
          </p>
        </section>
      )}

      {/* Footer Info */}
      <section className={styles.footerInfo}>
        <p>
          Powered by AI ‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é ‚Ä¢
          <a href="https://upgrowplan.com" className="nav-link-custom">
            {" "}
            Upgrowplan
          </a>
        </p>
      </section>
    </main>
  );
}
