import { useState } from "react";
import { Card, Button, Form, Alert } from "react-bootstrap";

interface Rating {
  clarity?: number;
  usefulness?: number;
  accuracy?: number;
  usability?: number;
  speed?: number;
  design?: number;
  recommend?: number;
  price?: number;
}

interface GradeProps {
  sessionId: string;
}

export default function Grade({ sessionId }: GradeProps) {
  const [rating, setRating] = useState<Rating>({});
  const [feedback, setFeedback] = useState("");

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏
  const calculateOverallRating = () => {
    const ratings = [
      rating.clarity,
      rating.usefulness,
      rating.accuracy,
      rating.usability,
      rating.speed,
      rating.design,
    ].filter((r) => r !== undefined);

    if (ratings.length === 0) return 0;
    return Math.round(
      ratings.reduce((sum, r) => sum + (r || 0), 0) / ratings.length
    );
  };

  const submitRatingAndFeedback = async () => {
    try {
      const overallRating = calculateOverallRating();
      const response = await fetch("http://localhost:8000/api/rating", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          ...rating,
          overall: overallRating,
          feedback,
          session_id: sessionId,
        }),
      });

      if (response.ok) {
        alert("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –∏ –æ—Ç–∑—ã–≤!");
        setRating({});
        setFeedback("");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞:", error);
    }
  };

  const renderStars = (
    category: keyof Rating,
    currentValue: number | undefined
  ) => (
    <div className="d-flex w-100 justify-content-between">
      {[1, 2, 3, 4, 5].map((star) => (
        <span
          key={star}
          style={{ cursor: "pointer", fontSize: "1.5rem" }}
          onClick={() => setRating({ ...rating, [category]: star })}
        >
          {star <= (currentValue || 0) ? "‚≠ê" : "‚òÜ"}
        </span>
      ))}
    </div>
  );

  return (
    <Card className="shadow-sm h-100" style={{ borderRadius: "16px" }}>
      <Card.Header
        style={{
          backgroundColor: "transparent",
          border: "none",
          padding: "1.5rem 1.5rem 0",
        }}
      >
        <h5 className="text-brand mb-0">‚≠ê –û—Ü–µ–Ω–∏—Ç–µ —Å–µ—Ä–≤–∏—Å</h5>
      </Card.Header>
      <Card.Body
        style={{ maxHeight: "650px", overflowY: "auto", padding: "1.5rem" }}
      >
        <div style={{ width: "100%" }}>
          {/* –¢–µ–∫—Å—Ç –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ */}
          <Alert variant="light" className="mb-4" style={{ width: "100%" }}>
            <p className="small mb-2">
              üéÅ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–µ–Ω!
            </p>
            <p className="small mb-0">
              –ú—ã —Å–æ–±–∏—Ä–∞–µ–º –æ—Ç–∑—ã–≤—ã - —ç—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ
              –æ—Ü–µ–Ω–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –°–ø–∞—Å–∏–±–æ,
              —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç—É —É–ª—É—á—à–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –ª—É—á—à–µ –ø–æ–º–æ–≥–∞—Ç—å
              –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º! üôè
            </p>
          </Alert>

          {/* –ü–æ–Ω—è—Ç–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–ü–æ–Ω—è—Ç–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</h6>
            {renderStars("clarity", rating.clarity)}
          </div>

          {/* –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞</h6>
            {renderStars("usefulness", rating.usefulness)}
          </div>

          {/* –¢–æ—á–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞ */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–¢–æ—á–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞</h6>
            {renderStars("accuracy", rating.accuracy)}
          </div>

          {/* –£–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–£–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</h6>
            {renderStars("usability", rating.usability)}
          </div>

          {/* –°–∫–æ—Ä–æ—Å—Ç—å */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–°–∫–æ—Ä–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</h6>
            {renderStars("speed", rating.speed)}
          </div>

          {/* –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</h6>
            {renderStars("design", rating.design)}
          </div>

          {/* –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ */}
          <div className="mb-4 p-3 bg-light rounded" style={{ width: "100%" }}>
            <h6 className="small mb-2 text-center">
              <strong>–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞</strong>
            </h6>
            <div className="d-flex w-100 justify-content-center gap-1">
              {[1, 2, 3, 4, 5].map((star) => (
                <span
                  key={star}
                  style={{ fontSize: "1.8rem", color: "#ffd700" }}
                >
                  {star <= calculateOverallRating() ? "‚≠ê" : "‚òÜ"}
                </span>
              ))}
            </div>
          </div>

          {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥—Ä—É–∑—å—è–º */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">
              –ù–∞—Å–∫–æ–ª—å–∫–æ –≤–µ—Ä–æ—è—Ç–Ω–æ, —á—Ç–æ –≤—ã –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –¥—Ä—É–∑—å—è–º?
            </h6>
            {renderStars("recommend", rating.recommend)}
          </div>

          {/* –¶–µ–Ω–∞ */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">
              –°–∫–æ–ª—å–∫–æ –º–æ–∂–µ—Ç –ø–æ –≤–∞—à–µ–º—É —Å—Ç–æ–∏—Ç—å —Ç–∞–∫–∞—è —É—Å–ª—É–≥–∞ –ø—Ä–∏ —Ä–∞–∑–æ–≤–æ–π –æ–ø–ª–∞—Ç–µ?
            </h6>
            <div className="d-flex flex-wrap gap-2" style={{ width: "100%" }}>
              {[5, 10, 15, 20, 25].map((price) => (
                <Button
                  key={price}
                  size="sm"
                  style={{ flex: "1 1 calc(33.333% - 0.5rem)" }}
                  variant={
                    rating.price === price ? "primary" : "outline-secondary"
                  }
                  onClick={() => setRating({ ...rating, price })}
                >
                  ${price}
                </Button>
              ))}
            </div>
          </div>

          {/* –ü–æ–ª–µ –æ—Ç–∑—ã–≤–∞ */}
          <div className="mb-4" style={{ width: "100%" }}>
            <h6 className="small mb-2">–í–∞—à –æ—Ç–∑—ã–≤ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)</h6>
            <Form.Control
              as="textarea"
              rows={4}
              placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏..."
              value={feedback}
              onChange={(e) => setFeedback(e.target.value)}
              style={{ width: "100%" }}
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <Button
            variant="success"
            onClick={submitRatingAndFeedback}
            disabled={!rating.clarity && !feedback}
            style={{ width: "100%" }}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –∏ –æ—Ç–∑—ã–≤
          </Button>
        </div>
      </Card.Body>
    </Card>
  );
}
